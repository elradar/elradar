#   labs(y = 'Ingreso Mensual', x = "") +
#   scale_fill_manual(values = colores) +
#   labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla7.1_alt <- tabla7.1 %>%
select(-IOP_hr) %>%
spread(., Sexo, IOP_mensual) %>%
mutate(brecha = paste0(formato_porc((Varones-Mujeres)/Varones*100), "%"),
x = (Varones+Mujeres)/2)
ggplot(tabla7.1_alt, aes(x = Mujeres, xend = Varones, y = CALIFICACION, group = CALIFICACION,label= brecha)) +
geom_dumbbell(color= "#808080",
size_x = 3, size_xend = 3,
colour_x = colores[1],
colour_xend = colores[2]) +
geom_text(data = tabla7.1_alt, aes(x, CALIFICACION, label = brecha), nudge_y = .2)+
labs(x="Ingreso Mensual",
y=NULL,
caption = "Fuente: Elaboración propia en base a EPH-INDEC")+
scale_color_manual(values = colores)+
theme_minimal()
tabla8.1 <- base_individual %>%
filter(ESTADO == 1, !is.na(NIVEL_EDUCATIVO)) %>%
group_by(Sexo) %>%
mutate(Frecuencia = sum(PONDERA)) %>%
group_by(Sexo, NIVEL_EDUCATIVO) %>%
summarise(Tasa = formato_porc(sum(PONDERA)/unique(Frecuencia)*100)) %>%
spread(., Sexo, Tasa) %>%
rename("Nivel Educativo" = NIVEL_EDUCATIVO, "% de Mujeres" = Mujeres, "% de Varones" = Varones)
tabla8.2 <- base_individual %>%
filter(ESTADO == 1,
PP3E_TOT > 0,
PP3E_TOT != 999,
!is.na(NIVEL_EDUCATIVO)) %>%
group_by(Sexo, NIVEL_EDUCATIVO) %>%
summarise(IOP_hr = round(weighted.mean(P21/(PP3E_TOT * 30 / 7), PONDIIO), 2),
IOP_mensual  = round(weighted.mean(P21, PONDIIO), 2))
inline_20 <- tabla8.2 %>%
filter(NIVEL_EDUCATIVO == "Superior") %>%
select(Sexo, IOP_mensual) %>%
spread(., Sexo, IOP_mensual) %>%
transmute(valor = formato_porc((Varones-Mujeres)/Varones * 100))
inline_20 <- inline_20$valor
inline_21 <- tabla8.2 %>%
filter(NIVEL_EDUCATIVO == "Primaria") %>%
select(Sexo, IOP_mensual) %>%
spread(., Sexo, IOP_mensual) %>%
transmute(valor = formato_porc((Varones-Mujeres)/Varones * 100))
inline_21 <- inline_21$valor
kable(tabla8.1, align = "r") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "center")
#ggplot(tabla8.2, aes(x = NIVEL_EDUCATIVO, IOP_mensual, fill = Sexo, group= Sexo, label = formato_pesos(IOP_mensual, dec = 0) )) +
#  geom_col(position = "dodge") +
#  geom_text(position = position_dodge(width = .9), vjust =-.1, size = 3.5) +
#  theme_minimal() +
#  theme(axis.text.y = element_blank(),
#        axis.ticks.y = element_blank()) +
#  labs(y = 'Ingreso Mensual', x = "") +
#  scale_fill_manual(values = colores) +
#  labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla8.2_alt <- tabla8.2 %>%
select(-IOP_hr) %>%
spread(., Sexo, IOP_mensual) %>%
mutate(brecha = paste0(formato_porc((Varones-Mujeres)/Varones*100), "%"),
x = (Varones+Mujeres)/2)
ggplot(tabla8.2_alt, aes(x = Mujeres, xend = Varones, y = NIVEL_EDUCATIVO, group = NIVEL_EDUCATIVO, label = brecha)) +
geom_dumbbell(color= "#808080",
size_x = 3, size_xend = 3,
colour_x = colores[1],
colour_xend = colores[2]) +
geom_text(aes(x, NIVEL_EDUCATIVO, label = brecha), nudge_y = .2)+
labs(x="Ingreso Mensual",
y=NULL,
caption = "Fuente: Elaboración propia en base a EPH-INDEC")+
scale_color_manual(values = colores)+
theme_minimal()
tabla7.1_alt2 <- tabla7.1 %>%
select(-IOP_mensual) %>%
spread(., Sexo, IOP_hr) %>%
mutate(brecha = paste0(formato_porc((Varones-Mujeres)/Varones*100), "%"),
x = (Varones+Mujeres)/2)
#ggplot(tabla7.1, aes(x = CALIFICACION, IOP_hr, fill = Sexo, group= Sexo, label = formato_pesos(IOP_hr, dec = 0) )) +
#  geom_col(position = "dodge") +
#  geom_text(position =position_dodge(width = .9), vjust =-.1, size = 4) +
#  theme_minimal() +
#  theme(axis.text.y = element_blank(),
#        axis.ticks.y = element_blank()) +
#  labs(y = 'Ingreso Horario', x = "") +
#  scale_fill_manual(values = colores) +
#  labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
ggplot(tabla7.1_alt2, aes(x = Mujeres, xend = Varones, y = CALIFICACION, group = CALIFICACION, label = brecha)) +
geom_dumbbell(color= "#808080",
size_x = 3, size_xend = 3,
colour_x = colores[1],
colour_xend = colores[2]) +
geom_text(aes(x, CALIFICACION, label = brecha), nudge_y = .2)+
labs(x="Ingreso Mensual",
y=NULL,
caption = "Fuente: Elaboración propia en base a EPH-INDEC")+
scale_color_manual(values = colores)+
theme_minimal()
tabla8.2_alt2 <- tabla8.2 %>%
select(-IOP_mensual) %>%
spread(., Sexo, IOP_hr) %>%
mutate(brecha = paste0(formato_porc((Varones-Mujeres)/Varones*100), "%"),
x = (Varones+Mujeres)/2)
#ggplot(tabla8.2, aes(x = NIVEL_EDUCATIVO, IOP_hr, fill = Sexo, group= Sexo, label = formato_pesos(IOP_hr, dec = 0) ))+
#  geom_col(position = "dodge")+
#  geom_text(position = position_dodge(width = .9), vjust =-.1, size = 4)+
#  theme_minimal() +
#  theme(axis.text.y = element_blank(),
#        axis.ticks.y = element_blank()) +
#  labs(y = 'Ingreso Horario', x = "") +
#  scale_fill_manual(values = colores) +
#  labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
ggplot(tabla8.2_alt2, aes(x = Mujeres, xend = Varones, y = NIVEL_EDUCATIVO, group = NIVEL_EDUCATIVO, label = brecha)) +
geom_dumbbell(color= "#808080",
size_x = 3, size_xend = 3,
colour_x = colores[1],
colour_xend = colores[2]) +
geom_text(aes(x, NIVEL_EDUCATIVO, label = brecha), nudge_y = .2)+
labs(x="Ingreso Mensual",
y=NULL,
caption = "Fuente: Elaboración propia en base a EPH-INDEC")+
scale_color_manual(values = colores)+
theme_minimal()
ggsave("Graficos/Grafico7_hr.png")
tabla11.1_graf <- base_individual %>%
left_join(., base_hogar %>%
select(CODUSU, NRO_HOGAR, VII1_1, VII1_2), by = c("CODUSU", "NRO_HOGAR")) %>%
mutate(proporcion = case_when(VII1_1 == COMPONENTE | VII1_2 == COMPONENTE ~ 1,
TRUE ~ 0)) %>%
select(Sexo, proporcion, PONDERA) %>%
group_by(Sexo) %>%
summarise(proporcion = sum(proporcion*PONDERA)) %>%
mutate(proporcion = round(proporcion/sum(proporcion)*100, 0))
inline_22 <- tabla11.1_graf$proporcion[tabla11.1_graf$Sexo == "Mujeres"]
inline_23 <- tabla11.1_graf$proporcion[tabla11.1_graf$Sexo == "Varones"]
## Prep data (nothing to change here)
nrows <- 10
df <- expand.grid(x = 1:nrows, y = 1:nrows)
df$Sexo <- factor(rep(tabla11.1_graf$Sexo, tabla11.1_graf$proporcion))
## Plot
ggplot(df, aes(x = x, y = y, fill = Sexo)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
scale_fill_manual(values = colores) +
theme_void() +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla9.1 <- base_individual %>%
filter(PP04B1 == 1) %>%
mutate(Total = sum(PONDERA)) %>%
group_by(Sexo) %>%
summarise(Proporcion = formato_porc(sum(PONDERA)/unique(Total)*100))
inline_24 <- tabla9.1$Proporcion[tabla9.1$Sexo == "Mujeres"]
tabla9.2_graf <- base_individual %>%
filter(ESTADO == 1,
Sexo == "Mujeres") %>%
mutate(servicio.domestico = case_when(PP04B1 == 1 ~ "Sí",
PP04B1 != 1 ~ "No")) %>%
group_by(servicio.domestico) %>%
summarise(frecuencia = sum(PONDERA)) %>%
mutate(proporcion = round(frecuencia/sum(frecuencia)*100, 0))
inline_25 <- tabla9.2_graf$proporcion[tabla9.2_graf$servicio.domestico == "Sí"]
colores2 = c("#FE1764","#808080")
## Prep data (nothing to change here)
nrows <- 10
df <- expand.grid(x = 1:nrows, y = 1:nrows)
df$servicio.domestico <- factor(rep(tabla9.2_graf$servicio.domestico, tabla9.2_graf$proporcion))
## Plot
ggplot(df, aes(x = x, y = y, fill = servicio.domestico)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
scale_fill_manual(values = colores2) +
theme_void() +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC") +
guides(fill=guide_legend(title="Trabajan en Servicio Doméstico?"))
tabla13.1_graf <-base_individual %>%
select(DECCFR, IPCF, PONDIH, Sexo) %>%
filter(DECCFR %in% c(1:10)) %>%
group_by(DECCFR) %>%
mutate(Pob = sum(PONDIH)) %>%
group_by(DECCFR, Sexo) %>%
summarise(Prop = sum(PONDIH)/unique(Pob))
ggplot(tabla13.1_graf, aes(x = DECCFR, Prop, fill = Sexo, group= Sexo, label = paste0(formato_porc(Prop*100), "%"))) +
geom_col(position = "dodge") +
geom_text(position = position_dodge(width = .9), vjust =-.1, size = 2.5) +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
labs(y = '') +
scale_fill_manual(values = colores) +
scale_x_continuous("Decil del Ingreso Per Cápita Familiar", breaks = c(1:10)) +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla12.1_graf <-base_individual %>%
select(DECINDR, P47T, PONDII, Sexo) %>%
filter(DECINDR %in% c(1:10)) %>%
group_by(DECINDR) %>%
mutate(Pob = sum(PONDII)) %>%
group_by(DECINDR, Sexo) %>%
summarise(Prop = sum(PONDII)/unique(Pob))
ggplot(tabla12.1_graf, aes(x = DECINDR, Prop, fill = Sexo, group= Sexo, label = paste0(formato_porc(Prop*100), "%"))) +
geom_col(position = "dodge")+
geom_text(position = position_dodge(width = .9), vjust =-.1, size = 2.5)+
theme_minimal()+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
labs(y = '') +
scale_fill_manual(values = colores)+
scale_x_continuous("Decil de ingreso total", breaks =c(1:10)) +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown::install_hugo()
blogdown::install_hugo(force = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::install_theme()
blogdown::install_theme("jane")
blogdown::install_theme("xianmin/hugo-theme-jane")
blogdown::install_theme("panr/hugo-theme-terminal/")
blogdown::install_theme("panr/hugo-theme-terminal")
blogdown::install_theme("panr/hugo-theme-terminal", force = TRUE)
blogdown::install_theme("vjeantet/hugo-theme-casper")
blogdown::install_theme("nodejh/hugo-theme-cactus-plus")
blogdown::install_theme("vjeantet/hugo-theme-casper", force = TRUE)
blogdown::install_theme("panr/hugo-theme-terminal", force = TRUE)
blogdown::install_theme("nodejh/hugo-theme-cactus-plus", force = TRUE)
blogdown::install_theme("jbub/ghostwriter")
blogdown::install_theme("nodejh/hugo-theme-cactus-plus", force = TRUE)
blogdown::install_theme("frjo/hugo-theme-zen")
blogdown:::new_post_addin()
blogdown::install_theme("JugglerX/hugo-whisper-theme")
blogdown::install_theme("allnightgrocery/hugo-theme-blueberry-detox")
blogdown::install_theme("lgaida/mediumish-gohugo-theme")
blogdown:::serve_site()
library(tidyverse)
library(janitor)
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv")
datos_limpios <- datos_originales %>%
clean_names()
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv", fileEncoding="latin1")
datos_limpios <- datos_originales %>%
clean_names()
colnames(datos_limpios)
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv", fileEncoding="latin1")
datos_originales
blogdown:::serve_site()
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv")
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv", encoding = "latin1")
datos_originales
library(tidyverse)
library(janitor)
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv", encoding = "latin1")
datos_originales
datos_limpios <- datos_originales %>%
clean_names()
colnames(datos_limpios)
datos_limpios <- datos_originales %>%
clean_names() %>%
remove_empty("rows") %>%
remove_constant() %>%
convert_to_NA("factor")
duplicados <- datos_limpios %>%
get_dupes()
dim(datos_limpios)
dim(duplicados)
datos_limpios <- datos_limpios %>%
mutate(genero = recode(genero,
"A" = "hombre",
"B" = "mujer"),
apoyo_espiritual = recode(apoyo_espiritual,
"A" = "no quiso",
"B" = "tuvo apoyo")) %>%
mutate_all(na_if,"")
head(datos_limpios)
datos_limpios %>%
tabyl(genero, apoyo_espiritual)
datos_limpios %>%
tabyl(genero, apoyo_espiritual) %>%
adorn_totals("row") %>%   ##muestra el total por categoria de columna
adorn_percentages("row") %>% ##nos muestra las celdas en porcentajes
adorn_pct_formatting() %>% ##formatea el porcentaje de manera legible
adorn_ns() %>% ##le suma a cada celda el número de casos absolutos entre paréntesis
adorn_title() ##le suma el título del cruce en la esquina superior izquierda
blogdown:::serve_site()
library(tidyverse)
library(sf)
load(file = "../../public/data/radio_persona_caba.rdata")
radio_persona_caba <- radio_persona_caba %>%
rename("relacion_jefe" = P01,
"sexo" = P02,
"edad" = P03,
"nacimiento" = P05,
"pais" = P06,
"lee_escribe" = P07,
"usa_comput" = P12,
"escolaridad" = P08,
"nivel" = P09,
"completo" = P10,
"actividad" = CONDACT,
"material_piso" = H05,
"material_techo" = H06,
"revestimientos" = H07)
#creando CO_FRAC_RA, desde las variables DPTO_REF_ID, IDFRAC e IDRADIO, sacandole los ceros de adelante.
radio_persona_caba <- radio_persona_caba %>%
mutate(IDFRAC = as.numeric(IDFRAC),
IDRADIO = as.numeric(IDRADIO)) %>%
unite(CO_FRAC_RA, DPTO_REF_ID, IDFRAC, IDRADIO, sep = "_", remove = FALSE)
#descargo del repositorio de datos abiertos de Ciudad
censo_geo <- st_read ("http://cdn.buenosaires.gob.ar/datosabiertos/datasets/informacion-censal-por-radio/CABA_rc.geojson", quiet = TRUE)
#selecciono la variable que me sirve
censo_geo_radio <- censo_geo %>%
select(CO_FRAC_RA = RADIO_ID)
#lo uno al censo de personas
radio_persona_caba <- radio_persona_caba %>%
left_join(censo_geo_radio, by = "CO_FRAC_RA")
comuna4_geo <- censo_geo%>%
filter(COMUNA == 4) %>%
select(RADIO_ID)
barrios <- st_read(dsn = "/Users/demian/Downloads/CABA Datos",
layer = "CABA_GA_WGS84", quiet = TRUE)
barrios <- st_read("/tmp/CABA Datos/CABA_GA_WGS84.shp")
View(barrios)
st_write(barrios, "public/data/barrios_populares.geojson")
barrios <- st_read("https://elradar.github.io/data/barrios_populares.geojson", quiet = TRUE)
comuna4_villa2124 <- barrios %>%
filter(FNA == "Villa 21-24") %>%
select(FNA)
ggplot()+
geom_sf(data = comuna4_geo, fill = NA, col = "grey40")+
geom_sf(data = comuna4_villa2124, fill = "green")+
labs(title = "Comuna 4. Radios censales y Asentamientos")+
theme_minimal()
barrios_bis <- st_geometry(barrios)
barrios_bis <- barrios_bis + c(0.00055,-0.0004)
barrios_bis_centroides <- st_centroid(barrios_bis)
barrios_bis <- (barrios_bis - barrios_bis_centroides)*0.99 + barrios_bis_centroides
barrios_bis <- st_sf(barrios_bis, crs = 4326)
barrios$geometry <- st_geometry(barrios_bis)
comuna4_villa2124 <- barrios %>%  #filtro por comuna 4
filter(FNA == "Villa 21-24") %>%
select(FNA)
ggplot()+ #graficamos
geom_sf(data = comuna4_geo, fill = NA, col = "grey40")+
geom_sf(data = comuna4_villa2124, fill = "green")+
labs(title = "Comuna 4. Radios censales y Asentamientos")+
theme_minimal()
cuales_radios <- function(x = comuna4_geo, y){
radios <- st_intersects(x, y)
radios <- lengths(radios)>0
cbind(x, radios) %>%
filter(radios == TRUE)
}
radios_villa_2124 <- cuales_radios(comuna4_geo, comuna4_villa2124)
ggplot()+
geom_sf(data = radios_villa_2124, fill = "red")+
geom_sf(data = comuna4_geo, fill = NA)+
geom_sf(data = comuna4_villa2124, fill = "green")+
labs(title = "Comuna 4. Radios censales de la Villa 21-24")+
theme_minimal()
radio_persona_caba$CO_FRAC_RA <- factor(radio_persona_caba$CO_FRAC_RA)
villa_2124_censo <- radio_persona_caba %>%
filter(CO_FRAC_RA %in% radios_villa_2124$RADIO_ID)
edad_escolar <- villa_2124_censo %>%
filter(edad >= 6 & edad <= 12)
edad_escolar <- villa_2124_censo %>%
filter(edad >= 6 & edad <= 12)
nivel_primario <- villa_2124_censo %>%
filter(nivel == 2 & escolaridad == 1)
nivel_primario <- villa_2124_censo %>%
filter(nivel == 2 & escolaridad == 1)
edad_noasiste <-   edad_escolar %>%
filter(escolaridad == 2 | escolaridad == 3) %>%
filter(completo == 2| completo == 0)
repitencia <- nivel_primario %>%
filter(edad > 13 & edad <= 18)
escuelas <-  st_read("/tmp/establecimientos-educativos.shp"
)
st_write(escuelas, "public/data/establecimientos_educativos.geojson")
#Escuelas Geo
escuelas <-  st_read("https://elradar.github.io/data/establecimientos_educativos.shp", quiet = TRUE) %>%
st_transform(4326)
#Escuelas Geo
escuelas <-  st_read("https://elradar.github.io/data/establecimientos_educativos.geojson", quiet = TRUE) %>%
st_transform(4326)
escuelas
primarios <- escuelas %>%
filter(NIVMOD == "PriCom") %>%
mutate(CUEANEXO = as.numeric(as.character(CUEANEXO)))
#Escuelas vacantes
vacantes17 <- read_csv2("http://cdn.buenosaires.gob.ar/datosabiertos/datasets/inscripcion-escolar/preinscripciones-escolares-2017.csv", locale = locale(encoding = "latin1") ) %>%
filter(NIVEL == "PRIMARIO") %>%
group_by(ESTABLECIMIENTO, CUE_ANEXO) %>%
summarise(primero_17 = n())
#Escuelas vacantes
vacantes17 <- read_csv2("http://cdn.buenosaires.gob.ar/datosabiertos/datasets/inscripcion-escolar/preinscripciones-escolares-2017.csv", locale = locale(encoding = "latin1") ) %>%
filter(NIVEL == "PRIMARIO") %>%
group_by(ESTABLECIMIENTO, CUE_ANEXO) %>%
summarise(primero_17 = n())
vacantes16 <- read_csv2("http://cdn.buenosaires.gob.ar/datosabiertos/datasets/inscripcion-escolar/inscripciones-escolares-2016.csv", locale = locale(encoding = "UTF-8") )%>%
filter(NIVEL == "PRIMARIO") %>%
group_by(ESTABLECIMIENTO) %>%
summarise(primero_16 = n())
vacantes16
vacantes_prom <- vacantes17 %>%
bind_cols(., vacantes16) %>%
select(-ESTABLECIMIENTO1) %>%
mutate(total = round((primero_17+primero_16)/2*7,0)) %>%
ungroup() %>%
select(-primero_17, -primero_16, -ESTABLECIMIENTO)
primarios_vacantes <- primarios %>%
left_join(vacantes_prom, by = c("CUEANEXO" = "CUE_ANEXO")) %>%
select(CUEANEXO, DOM_EDIFIC, NOMBRE_ABR, DE, COMUNA, total)
primarios_comuna_4 <- primarios_vacantes %>%
mutate(long = st_coordinates(primarios_vacantes)[,1],
lat = st_coordinates(primarios_vacantes)[,2]) %>%
filter(COMUNA== 4)
mapa_escuelas <- leaflet() %>%
setView(lng =-58.399685,lat = -34.654402, zoom = 13) %>%
addTiles() %>%
addPolygons(data = st_union(comuna4_geo)) %>%
addPolygons(data = st_union(comuna4_villa2124), color = "red") %>%
addMarkers(data = primarios_comuna_4,
lng = primarios_comuna_4$long,
lat = primarios_comuna_4$lat,
label = ~paste0(primarios_comuna_4$NOMBRE_ABR, ": ",as.character(primarios_comuna_4$total)) )
install.packages("mapdeck")
mapa_escuelas
library(leaflet)
mapa_escuelas <- leaflet() %>%
setView(lng =-58.399685,lat = -34.654402, zoom = 13) %>%
addTiles() %>%
addPolygons(data = st_union(comuna4_geo)) %>%
addPolygons(data = st_union(comuna4_villa2124), color = "red") %>%
addMarkers(data = primarios_comuna_4,
lng = primarios_comuna_4$long,
lat = primarios_comuna_4$lat,
label = ~paste0(primarios_comuna_4$NOMBRE_ABR, ": ",as.character(primarios_comuna_4$total)) )
mapa_escuelas <- leaflet() %>%
setView(lng =-58.399685,lat = -34.654402, zoom = 13) %>%
addTiles() %>%
addPolygons(data = st_union(comuna4_geo)) %>%
addPolygons(data = st_union(comuna4_villa2124), color = "red") %>%
addMarkers(data = primarios_comuna_4,
lng = primarios_comuna_4$long,
lat = primarios_comuna_4$lat,
label = ~paste0(primarios_comuna_4$NOMBRE_ABR, ": ",as.character(primarios_comuna_4$total)) )
mapa_escuelas
comuna4_villa2124_buffer<- comuna4_villa2124 %>%
st_buffer(.,0.007)
escuelas_buffer <- leaflet() %>%
setView(lng =-58.399685,lat = -34.654402, zoom = 13) %>%
addTiles() %>%
addPolygons(data = comuna4_villa2124_buffer, color = "green") %>%
addPolygons(data = st_union(comuna4_geo)) %>%
addPolygons(data = st_union(comuna4_villa2124), color = "red") %>%
addMarkers(data = primarios_comuna_4,
lng = primarios_comuna_4$long,
lat = primarios_comuna_4$lat,
label = ~paste0(primarios_comuna_4$NOMBRE_ABR, ": ",as.character(primarios_comuna_4$total)) )
htmlwidgets::saveWidget(escuelas_buffer, file = "escuelas_buffer.html")
rm(radio_persona_caba)
gc()
escuelas_buffer <- leaflet() %>%
setView(lng =-58.399685,lat = -34.654402, zoom = 13) %>%
addTiles() %>%
addPolygons(data = comuna4_villa2124_buffer, color = "green") %>%
addPolygons(data = st_union(comuna4_geo)) %>%
addPolygons(data = st_union(comuna4_villa2124), color = "red") %>%
addMarkers(data = primarios_comuna_4,
lng = primarios_comuna_4$long,
lat = primarios_comuna_4$lat,
label = ~paste0(primarios_comuna_4$NOMBRE_ABR, ": ",as.character(primarios_comuna_4$total)) )
escuelas_buffer
escuelas_villa <- st_intersects(primarios_vacantes, comuna4_villa2124_buffer, sparse = FALSE)
escuelas_villa <- data.frame(escuelas_villa) %>%
rename(villa = escuelas_villa)
primarias_villa <-cbind(primarios_vacantes, escuelas_villa$villa) %>%
rename(villa = escuelas_villa.villa)
primarias_villa <- primarias_villa %>%
filter(villa == TRUE)
primarias_villa <- primarias_villa %>%
mutate ( distancia = st_distance(primarias_villa, st_centroid(comuna4_villa2124)) ) %>%
select(-CUEANEXO, -DE, -COMUNA, villa)
primarias_villa %>%
st_set_geometry(NULL) %>%
select(-villa) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F)
library(kableExtra)
primarias_villa %>%
st_set_geometry(NULL) %>%
select(-villa) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F)
alrededores <- cuales_radios(comuna4_geo, comuna4_villa2124_buffer)
alrededores_censo <- radio_persona_caba %>%
filter(CO_FRAC_RA %in% alrededores$RADIO_ID)
install.packages("mapdeck")
blogdown:::serve_site()
blogdown::new_post()
blogdown::new_post('Un CRAN a la vez: janitor')
blogdown::serve_site()
blogdown::new_post()
blogdown::new_post()
blogdown::new_post("stringr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(wordcloud)
tabla_estructurada <- dplyr::tibble(anio=c('2017','2017','2017','2018','2018','2018'), tipo = c('A','B','C','A','B','C'), n = c('45','60','23','32','63','19'))
knitr::kable(head(tabla_estructurada))
