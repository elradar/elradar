'Tasa Ocupados Demandantes'       = round(Ocupados_demand/PEA, 3),
'Tasa Subocupación'               = round(Subocupados/PEA, 3),
'Tasa Subocupación demandante'    = round(Suboc_demandante/PEA, 3),
'Tasa Subocupación no demandante' = round(Suboc_no_demand/PEA, 3)) %>%
select(-c(2:9)) %>%
gather(Indicadores, Valor, 2:8) %>%
spread(., Sexo, Valor)
inline_5 <- tabla1.1 %>% filter(Indicadores == "Tasa Actividad") %>%
transmute(diferencia = round((Varones-Mujeres)*100,-1))
inline_5 <- inline_5$diferencia
inline_6 <- tabla1.1 %>% filter(Indicadores == "Tasa Empleo") %>%
transmute(diferencia = round((Varones-Mujeres)*100,-1))
inline_6 <- inline_6$diferencia
tabla1.2_graf <- tabla1.1 %>%
filter(Indicadores %in% c("Tasa Actividad", "Tasa Empleo")) %>%
gather(., Sexo, proporcion, 2:3)
ggplot(tabla1.2_graf, aes(x = '', proporcion, fill = Sexo, group= Sexo, label = paste0(formato_porc(proporcion*100), "%"))) +
geom_col(position = "dodge") +
geom_text(position = position_dodge(width = .9), vjust =2, size = 6) +
theme_void() +
scale_fill_manual(values = colores) +
facet_grid(~Indicadores) +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
# Aquí hay que cambiar el directorio en que se va a guardar el gráfico.
ggsave("Graficos/Grafico1.png", scale = 2)
tabla1.3_graf <- tabla1.1 %>%
filter(Indicadores %in% c("Tasa Desocupación", "Tasa Subocupación")) %>%
gather(., Sexo, proporcion, 2:3)
ggplot(tabla1.3_graf, aes(x = '', proporcion, fill = Sexo, group= Sexo, label = paste0(formato_porc(proporcion*100), "%"))) +
geom_col(position = "dodge") +
geom_text(position = position_dodge(width = .9), vjust =2, size = 6) +
theme_void() +
scale_fill_manual(values = colores) +
facet_grid(~Indicadores) +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla1.4 <- base_individual %>%
filter(CH06 >= 14) %>%
group_by(Sexo, GRUPO_EDAD) %>%
summarise(Poblacion         = sum(PONDERA),
Ocupados          = sum(PONDERA[ESTADO == 1]),
Desocupados       = sum(PONDERA[ESTADO == 2]),
PEA               = Ocupados + Desocupados,
Ocupados_demand   = sum(PONDERA[ESTADO == 1 & PP03J ==1]),
Suboc_demandante  = sum(PONDERA[ESTADO == 1 & INTENSI ==1 & PP03J==1]),
Suboc_no_demand   = sum(PONDERA[ESTADO == 1 & INTENSI ==1 & PP03J %in% c(2,9)]),
Subocupados       = Suboc_demandante + Suboc_no_demand,
'Tasa Actividad'                  = formato_porc(PEA/Poblacion*100),
'Tasa Empleo'                     = formato_porc(Ocupados/Poblacion*100),
'Tasa Desocupación'               = formato_porc(Desocupados/PEA*100),
'Tasa Subocupación'               = formato_porc(Subocupados/PEA*100)) %>%
select(-c(3:10)) %>%
filter(!is.na(GRUPO_EDAD)) %>%
gather(Indicadores, Valor, 3:6) %>%
spread(., Sexo, Valor) %>%
mutate(Indicadores = factor(Indicadores, levels = c("Tasa Actividad", "Tasa Empleo", "Tasa Desocupación", "Tasa Subocupación"))) %>%
arrange(Indicadores)
tabla1.4.m <- tabla1.4 %>%
select(-Varones) %>%
spread(., GRUPO_EDAD, Mujeres)
tabla1.4.v <- tabla1.4 %>%
select(-Mujeres) %>%
spread(., GRUPO_EDAD, Varones)
tabla1.5 <- left_join(tabla1.4.m,tabla1.4.v, by = "Indicadores") %>%
select(Indicadores, Mujeres = `de 14 a 29 años.x`, Varones = `de 14 a 29 años.y`,
Mujeres = `de 30 a 64 años.x`, Varones = `de 30 a 64 años.y`)
inline_19 <- tabla1.4.m$`de 14 a 29 años`[tabla1.4.m$Indicadores == "Tasa Desocupación"]
kable(tabla1.5, align = "r") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "center") %>%
add_header_above(c(" " = 1, "de 14 a 29 años" = 2, "de 30 a 64 años" = 2))
tabla2.1 <- base_individual %>%
filter(ESTADO==1,
CAT_OCUP==3) %>%
group_by(Sexo) %>%
summarise("Proporción de no Registrados" = formato_porc(sum(PONDERA[PP07H==2])/sum(PONDERA)*100))
inline_1 <- tabla2.1$`Proporción de no Registrados`[tabla2.1$Sexo == "Mujeres"]
inline_2 <- tabla2.1$`Proporción de no Registrados`[tabla2.1$Sexo == "Varones"]
kable(tabla2.1, align = "r") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "center")
tabla3.1 <- base_individual %>%
filter(JERARQUIA != "0",
ESTADO == 1) %>%
group_by(Sexo) %>%
mutate(Frecuencia = sum(PONDERA)) %>%
group_by(Sexo, JERARQUIA) %>%
summarise(proporcion = round(sum(PONDERA)/unique(Frecuencia), 3))
inline_3 <- formato_porc(sum(tabla3.1$proporcion[tabla3.1$JERARQUIA %in% c("Jefes", "Dirección") & tabla3.1$Sexo == "Varones"]) * 100)
inline_4 <- formato_porc(sum(tabla3.1$proporcion[tabla3.1$JERARQUIA %in% c("Jefes", "Dirección") & tabla3.1$Sexo == "Mujeres"]) * 100)
ggplot(tabla3.1, aes(x = '', proporcion, fill = Sexo, group= Sexo, label = percent(proporcion) ))+
geom_col(position = "dodge") +
geom_text(position = position_dodge(width = .9), vjust =2, size = 6) +
theme_void()+
scale_fill_manual(values = colores)+
facet_wrap(~JERARQUIA, scales = "free") +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla4.1 <- base_individual %>%
filter(P47T > 0) %>%
group_by(Sexo) %>%
summarise(Media.ITI = round(weighted.mean(P47T, PONDII), 1)) %>%
spread(., Sexo, Media.ITI) %>%
mutate("Brecha del Ingreso Total Individual" = formato_porc(((Varones-Mujeres)/Varones)*100),
"Media de ingresos de las Mujeres" = formato_pesos(Mujeres),
"Media de ingresos de los Varones" = formato_pesos(Varones)) %>%
select("Media de ingresos de las Mujeres", "Media de ingresos de los Varones", "Brecha del Ingreso Total Individual")
inline_8 <- tabla4.1$`Brecha del Ingreso Total Individual`
kable(tabla4.1, align = "r") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "center")
tabla5.1 <- base_individual %>%
filter(ESTADO == 1) %>%
group_by(Sexo) %>%
summarise(Media.IOP = round(weighted.mean(P21, PONDIIO), 1)) %>%
spread(., Sexo, Media.IOP) %>%
mutate("Brecha de ingresos de la ocupación principal" = formato_porc(((Varones-Mujeres)/Varones)*100),
"Media de ingresos de las Mujeres" = formato_pesos(Mujeres),
"Media de ingresos de los Varones" = formato_pesos(Varones)) %>%
select("Media de ingresos de las Mujeres", "Media de ingresos de los Varones", "Brecha de ingresos de la ocupación principal")
inline_9 <- tabla5.1$`Brecha de ingresos de la ocupación principal`
inline_10 <- tabla5.1$`Media de ingresos de las Mujeres`
inline_11 <- tabla5.1$`Media de ingresos de los Varones`
kable(tabla5.1, align = "r") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "center")
tabla6.1 <- base_individual %>%
filter(ESTADO == 1 & CAT_OCUP == 3 & PP07H == 2) %>%
group_by(Sexo) %>%
summarise(Media.IOP = round(weighted.mean(P21, PONDIIO), 1)) %>%
spread(., Sexo, Media.IOP) %>%
mutate("Brecha de ingresos de la ocupación principal" = formato_porc(((Varones-Mujeres)/Varones)*100),
"Media de ingresos de las Mujeres" = formato_pesos(Mujeres),
"Media de ingresos de los Varones" = formato_pesos(Varones)) %>%
select("Media de ingresos de las Mujeres", "Media de ingresos de los Varones", "Brecha de ingresos de la ocupación principal")
inline_12 <- tabla6.1$`Brecha de ingresos de la ocupación principal`
kable(tabla6.1, align = "r") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "center")
tabla7.1 <- base_individual %>%
filter(CALIFICACION != "0",
ESTADO == 1,
PP3E_TOT > 0,
PP3E_TOT != 999) %>%
group_by(Sexo, CALIFICACION) %>%
summarise(IOP_hr = round(weighted.mean(P21/(PP3E_TOT * 30 / 7), PONDIIO), 2),
IOP_mensual  = round(weighted.mean(P21, PONDIIO), 2))
inline_13 <- formato_pesos(tabla7.1$IOP_mensual[tabla7.1$Sexo == "Varones" & tabla7.1$CALIFICACION == "Profesionales"], dec = 0)
inline_14 <- formato_pesos(tabla7.1$IOP_mensual[tabla7.1$Sexo == "Mujeres" & tabla7.1$CALIFICACION == "Profesionales"], dec = 0)
inline_15 <- tabla7.1 %>%
filter(CALIFICACION == "Profesionales") %>%
select(Sexo, IOP_mensual) %>%
spread(., Sexo, IOP_mensual) %>%
transmute(valor = formato_porc((Varones-Mujeres)/Varones * 100))
inline_15 <- inline_15$valor
inline_16 <- formato_pesos(tabla7.1$IOP_mensual[tabla7.1$Sexo == "Varones" & tabla7.1$CALIFICACION == "No Calificados"], dec = 0)
inline_17 <- formato_pesos(tabla7.1$IOP_mensual[tabla7.1$Sexo == "Mujeres" & tabla7.1$CALIFICACION == "No Calificados"], dec = 0)
inline_18 <- tabla7.1 %>%
filter(CALIFICACION == "No Calificados") %>%
select(Sexo, IOP_mensual) %>%
spread(., Sexo, IOP_mensual) %>%
transmute(valor = formato_porc((Varones-Mujeres)/Varones * 100))
inline_18 <- inline_18$valor
# ggplot(tabla7.1, aes(x = CALIFICACION, IOP_mensual, fill = Sexo, group = Sexo, label = formato_pesos(IOP_mensual, dec = 0) ))+
#   geom_col(position = "dodge") +
#   geom_text(position =position_dodge(width = .9), vjust =-.1, size = 3.5) +
#   theme_minimal() +
#   theme(axis.text.y = element_blank(),
#         axis.ticks.y = element_blank()) +
#   labs(y = 'Ingreso Mensual', x = "") +
#   scale_fill_manual(values = colores) +
#   labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla7.1_alt <- tabla7.1 %>%
select(-IOP_hr) %>%
spread(., Sexo, IOP_mensual) %>%
mutate(brecha = paste0(formato_porc((Varones-Mujeres)/Varones*100), "%"),
x = (Varones+Mujeres)/2)
ggplot(tabla7.1_alt, aes(x = Mujeres, xend = Varones, y = CALIFICACION, group = CALIFICACION,label= brecha)) +
geom_dumbbell(color= "#808080",
size_x = 3, size_xend = 3,
colour_x = colores[1],
colour_xend = colores[2]) +
geom_text(data = tabla7.1_alt, aes(x, CALIFICACION, label = brecha), nudge_y = .2)+
labs(x="Ingreso Mensual",
y=NULL,
caption = "Fuente: Elaboración propia en base a EPH-INDEC")+
scale_color_manual(values = colores)+
theme_minimal()
tabla8.1 <- base_individual %>%
filter(ESTADO == 1, !is.na(NIVEL_EDUCATIVO)) %>%
group_by(Sexo) %>%
mutate(Frecuencia = sum(PONDERA)) %>%
group_by(Sexo, NIVEL_EDUCATIVO) %>%
summarise(Tasa = formato_porc(sum(PONDERA)/unique(Frecuencia)*100)) %>%
spread(., Sexo, Tasa) %>%
rename("Nivel Educativo" = NIVEL_EDUCATIVO, "% de Mujeres" = Mujeres, "% de Varones" = Varones)
tabla8.2 <- base_individual %>%
filter(ESTADO == 1,
PP3E_TOT > 0,
PP3E_TOT != 999,
!is.na(NIVEL_EDUCATIVO)) %>%
group_by(Sexo, NIVEL_EDUCATIVO) %>%
summarise(IOP_hr = round(weighted.mean(P21/(PP3E_TOT * 30 / 7), PONDIIO), 2),
IOP_mensual  = round(weighted.mean(P21, PONDIIO), 2))
inline_20 <- tabla8.2 %>%
filter(NIVEL_EDUCATIVO == "Superior") %>%
select(Sexo, IOP_mensual) %>%
spread(., Sexo, IOP_mensual) %>%
transmute(valor = formato_porc((Varones-Mujeres)/Varones * 100))
inline_20 <- inline_20$valor
inline_21 <- tabla8.2 %>%
filter(NIVEL_EDUCATIVO == "Primaria") %>%
select(Sexo, IOP_mensual) %>%
spread(., Sexo, IOP_mensual) %>%
transmute(valor = formato_porc((Varones-Mujeres)/Varones * 100))
inline_21 <- inline_21$valor
kable(tabla8.1, align = "r") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "center")
#ggplot(tabla8.2, aes(x = NIVEL_EDUCATIVO, IOP_mensual, fill = Sexo, group= Sexo, label = formato_pesos(IOP_mensual, dec = 0) )) +
#  geom_col(position = "dodge") +
#  geom_text(position = position_dodge(width = .9), vjust =-.1, size = 3.5) +
#  theme_minimal() +
#  theme(axis.text.y = element_blank(),
#        axis.ticks.y = element_blank()) +
#  labs(y = 'Ingreso Mensual', x = "") +
#  scale_fill_manual(values = colores) +
#  labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla8.2_alt <- tabla8.2 %>%
select(-IOP_hr) %>%
spread(., Sexo, IOP_mensual) %>%
mutate(brecha = paste0(formato_porc((Varones-Mujeres)/Varones*100), "%"),
x = (Varones+Mujeres)/2)
ggplot(tabla8.2_alt, aes(x = Mujeres, xend = Varones, y = NIVEL_EDUCATIVO, group = NIVEL_EDUCATIVO, label = brecha)) +
geom_dumbbell(color= "#808080",
size_x = 3, size_xend = 3,
colour_x = colores[1],
colour_xend = colores[2]) +
geom_text(aes(x, NIVEL_EDUCATIVO, label = brecha), nudge_y = .2)+
labs(x="Ingreso Mensual",
y=NULL,
caption = "Fuente: Elaboración propia en base a EPH-INDEC")+
scale_color_manual(values = colores)+
theme_minimal()
tabla7.1_alt2 <- tabla7.1 %>%
select(-IOP_mensual) %>%
spread(., Sexo, IOP_hr) %>%
mutate(brecha = paste0(formato_porc((Varones-Mujeres)/Varones*100), "%"),
x = (Varones+Mujeres)/2)
#ggplot(tabla7.1, aes(x = CALIFICACION, IOP_hr, fill = Sexo, group= Sexo, label = formato_pesos(IOP_hr, dec = 0) )) +
#  geom_col(position = "dodge") +
#  geom_text(position =position_dodge(width = .9), vjust =-.1, size = 4) +
#  theme_minimal() +
#  theme(axis.text.y = element_blank(),
#        axis.ticks.y = element_blank()) +
#  labs(y = 'Ingreso Horario', x = "") +
#  scale_fill_manual(values = colores) +
#  labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
ggplot(tabla7.1_alt2, aes(x = Mujeres, xend = Varones, y = CALIFICACION, group = CALIFICACION, label = brecha)) +
geom_dumbbell(color= "#808080",
size_x = 3, size_xend = 3,
colour_x = colores[1],
colour_xend = colores[2]) +
geom_text(aes(x, CALIFICACION, label = brecha), nudge_y = .2)+
labs(x="Ingreso Mensual",
y=NULL,
caption = "Fuente: Elaboración propia en base a EPH-INDEC")+
scale_color_manual(values = colores)+
theme_minimal()
tabla8.2_alt2 <- tabla8.2 %>%
select(-IOP_mensual) %>%
spread(., Sexo, IOP_hr) %>%
mutate(brecha = paste0(formato_porc((Varones-Mujeres)/Varones*100), "%"),
x = (Varones+Mujeres)/2)
#ggplot(tabla8.2, aes(x = NIVEL_EDUCATIVO, IOP_hr, fill = Sexo, group= Sexo, label = formato_pesos(IOP_hr, dec = 0) ))+
#  geom_col(position = "dodge")+
#  geom_text(position = position_dodge(width = .9), vjust =-.1, size = 4)+
#  theme_minimal() +
#  theme(axis.text.y = element_blank(),
#        axis.ticks.y = element_blank()) +
#  labs(y = 'Ingreso Horario', x = "") +
#  scale_fill_manual(values = colores) +
#  labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
ggplot(tabla8.2_alt2, aes(x = Mujeres, xend = Varones, y = NIVEL_EDUCATIVO, group = NIVEL_EDUCATIVO, label = brecha)) +
geom_dumbbell(color= "#808080",
size_x = 3, size_xend = 3,
colour_x = colores[1],
colour_xend = colores[2]) +
geom_text(aes(x, NIVEL_EDUCATIVO, label = brecha), nudge_y = .2)+
labs(x="Ingreso Mensual",
y=NULL,
caption = "Fuente: Elaboración propia en base a EPH-INDEC")+
scale_color_manual(values = colores)+
theme_minimal()
ggsave("Graficos/Grafico7_hr.png")
tabla11.1_graf <- base_individual %>%
left_join(., base_hogar %>%
select(CODUSU, NRO_HOGAR, VII1_1, VII1_2), by = c("CODUSU", "NRO_HOGAR")) %>%
mutate(proporcion = case_when(VII1_1 == COMPONENTE | VII1_2 == COMPONENTE ~ 1,
TRUE ~ 0)) %>%
select(Sexo, proporcion, PONDERA) %>%
group_by(Sexo) %>%
summarise(proporcion = sum(proporcion*PONDERA)) %>%
mutate(proporcion = round(proporcion/sum(proporcion)*100, 0))
inline_22 <- tabla11.1_graf$proporcion[tabla11.1_graf$Sexo == "Mujeres"]
inline_23 <- tabla11.1_graf$proporcion[tabla11.1_graf$Sexo == "Varones"]
## Prep data (nothing to change here)
nrows <- 10
df <- expand.grid(x = 1:nrows, y = 1:nrows)
df$Sexo <- factor(rep(tabla11.1_graf$Sexo, tabla11.1_graf$proporcion))
## Plot
ggplot(df, aes(x = x, y = y, fill = Sexo)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
scale_fill_manual(values = colores) +
theme_void() +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla9.1 <- base_individual %>%
filter(PP04B1 == 1) %>%
mutate(Total = sum(PONDERA)) %>%
group_by(Sexo) %>%
summarise(Proporcion = formato_porc(sum(PONDERA)/unique(Total)*100))
inline_24 <- tabla9.1$Proporcion[tabla9.1$Sexo == "Mujeres"]
tabla9.2_graf <- base_individual %>%
filter(ESTADO == 1,
Sexo == "Mujeres") %>%
mutate(servicio.domestico = case_when(PP04B1 == 1 ~ "Sí",
PP04B1 != 1 ~ "No")) %>%
group_by(servicio.domestico) %>%
summarise(frecuencia = sum(PONDERA)) %>%
mutate(proporcion = round(frecuencia/sum(frecuencia)*100, 0))
inline_25 <- tabla9.2_graf$proporcion[tabla9.2_graf$servicio.domestico == "Sí"]
colores2 = c("#FE1764","#808080")
## Prep data (nothing to change here)
nrows <- 10
df <- expand.grid(x = 1:nrows, y = 1:nrows)
df$servicio.domestico <- factor(rep(tabla9.2_graf$servicio.domestico, tabla9.2_graf$proporcion))
## Plot
ggplot(df, aes(x = x, y = y, fill = servicio.domestico)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
scale_fill_manual(values = colores2) +
theme_void() +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC") +
guides(fill=guide_legend(title="Trabajan en Servicio Doméstico?"))
tabla13.1_graf <-base_individual %>%
select(DECCFR, IPCF, PONDIH, Sexo) %>%
filter(DECCFR %in% c(1:10)) %>%
group_by(DECCFR) %>%
mutate(Pob = sum(PONDIH)) %>%
group_by(DECCFR, Sexo) %>%
summarise(Prop = sum(PONDIH)/unique(Pob))
ggplot(tabla13.1_graf, aes(x = DECCFR, Prop, fill = Sexo, group= Sexo, label = paste0(formato_porc(Prop*100), "%"))) +
geom_col(position = "dodge") +
geom_text(position = position_dodge(width = .9), vjust =-.1, size = 2.5) +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
labs(y = '') +
scale_fill_manual(values = colores) +
scale_x_continuous("Decil del Ingreso Per Cápita Familiar", breaks = c(1:10)) +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
tabla12.1_graf <-base_individual %>%
select(DECINDR, P47T, PONDII, Sexo) %>%
filter(DECINDR %in% c(1:10)) %>%
group_by(DECINDR) %>%
mutate(Pob = sum(PONDII)) %>%
group_by(DECINDR, Sexo) %>%
summarise(Prop = sum(PONDII)/unique(Pob))
ggplot(tabla12.1_graf, aes(x = DECINDR, Prop, fill = Sexo, group= Sexo, label = paste0(formato_porc(Prop*100), "%"))) +
geom_col(position = "dodge")+
geom_text(position = position_dodge(width = .9), vjust =-.1, size = 2.5)+
theme_minimal()+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
labs(y = '') +
scale_fill_manual(values = colores)+
scale_x_continuous("Decil de ingreso total", breaks =c(1:10)) +
labs(caption = "Fuente: Elaboración propia en base a EPH-INDEC")
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown::install_hugo()
blogdown::install_hugo(force = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::install_theme()
blogdown::install_theme("jane")
blogdown::install_theme("xianmin/hugo-theme-jane")
blogdown::install_theme("panr/hugo-theme-terminal/")
blogdown::install_theme("panr/hugo-theme-terminal")
blogdown::install_theme("panr/hugo-theme-terminal", force = TRUE)
blogdown::install_theme("vjeantet/hugo-theme-casper")
blogdown::install_theme("nodejh/hugo-theme-cactus-plus")
blogdown::install_theme("vjeantet/hugo-theme-casper", force = TRUE)
blogdown::install_theme("panr/hugo-theme-terminal", force = TRUE)
blogdown::install_theme("nodejh/hugo-theme-cactus-plus", force = TRUE)
blogdown::install_theme("jbub/ghostwriter")
blogdown::install_theme("nodejh/hugo-theme-cactus-plus", force = TRUE)
blogdown::install_theme("frjo/hugo-theme-zen")
blogdown:::new_post_addin()
blogdown::install_theme("JugglerX/hugo-whisper-theme")
blogdown::install_theme("allnightgrocery/hugo-theme-blueberry-detox")
blogdown::install_theme("lgaida/mediumish-gohugo-theme")
blogdown::serve_site()
blogdown::new_post()
blogdown::new_post("Un CRAN a la vez: janitor")
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv")
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv")
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv")
head(datos_limpios)
datos_limpios <- datos_limpios %>%
mutate(genero = recode(genero,
"A" = "hombre",
"B" = "mujer"),
apoyo_espiritual = recode(apoyo_espiritual,
"A" = "no quiso",
"B" = "tuvo apoyo"))
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv")
datos_limpios <- datos_originales %>%
clean_names()
`{r}
library(tidyverse)
library(janitor)
datos_limpios <- datos_originales %>%
clean_names()
colnames(datos_limpios)
library(tidyverse)
library(janitor)
library(tidyverse)
library(janitor)
datos_limpios <- datos_originales %>%
clean_names()
colnames(datos_limpios)
datos_limpios <- datos_originales %>%
clean_names() %>%
remove_empty("rows") %>%
remove_constant() %>%
convert_to_NA("factor")
duplicados <- datos_limpios %>%
get_dupes()
dim(datos_limpios)
dim(duplicados)
datos_limpios <- datos_limpios %>%
mutate(genero = recode(genero,
"A" = "hombre",
"B" = "mujer"),
apoyo_espiritual = recode(apoyo_espiritual,
"A" = "no quiso",
"B" = "tuvo apoyo"))
head(datos_limpios)
datos_limpios %>%
tabyl(genero, apoyo_espiritual)
datos_limpios %>%
tabyl(genero, apoyo_espiritual) %>%
adorn_totals("row") %>%   ##muestra el total por categoria de columna
adorn_percentages("row") %>% ##nos muestra las celdas en porcentajes
adorn_pct_formatting() %>% ##formatea el porcentaje de manera legible
adorn_ns() %>% ##le suma a cada celda el número de casos absolutos entre paréntesis
adorn_title() ##le suma el título del cruce en la esquina superior izquierda
datos_limpios <- datos_limpios %>%
mutate(genero = recode(genero,
"A" = "hombre",
"B" = "mujer"),
apoyo_espiritual = recode(apoyo_espiritual,
"A" = "no quiso",
"B" = "tuvo apoyo")) %>%
mutate_all(na_if,"")
head(datos_limpios)
datos_limpios <- datos_limpios %>%
mutate(genero = recode(genero,
"A" = "hombre",
"B" = "mujer"),
apoyo_espiritual = recode(apoyo_espiritual,
"A" = "no quiso",
"B" = "tuvo apoyo")) %>%
mutate_all(na_if,"")
head(datos_limpios)
datos_limpios %>%
tabyl(genero, apoyo_espiritual)
```{r tablas}
datos_limpios %>%
tabyl(genero, apoyo_espiritual)
blogdown:::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::serve_site()
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv", encoding = "latin1")
datos_originales
datos_limpios <- datos_originales %>%
clean_names()
colnames(datos_limpios)
library(tidyverse)
library(tidyverse)
library(janitor)
datos_originales <- read.csv("https://elradar.github.io/data/data_janitor.csv", encoding = "latin1")
glimpse(datos_originales)
datos_limpios <- datos_originales %>%
clean_names()
colnames(datos_limpios)
datos_limpios <- datos_limpios %>%
select(-x) %>%
mutate(genero = recode(genero,
"A" = "hombre",
"B" = "mujer"),
apoyo_espiritual = recode(apoyo_espiritual,
"A" = "no quiso",
"B" = "tuvo apoyo")) %>%
mutate_all(na_if,"")
glimpse(datos_limpios)
datos_limpios %>%
tabyl(genero, apoyo_espiritual)
datos_limpios %>%
tabyl(genero, apoyo_espiritual) %>%
adorn_totals("row") %>%   ##muestra el total por categoria de columna
adorn_percentages("row") %>% ##nos muestra las celdas en porcentajes
adorn_pct_formatting() %>% ##formatea el porcentaje de manera legible
adorn_ns() %>% ##le suma a cada celda el número de casos absolutos entre paréntesis
adorn_title() ##le suma el título del cruce en la esquina superior izquierda
